
[NoDelete]
interface Im {
    static boolean Begin([Const] DOMString name);
    static void End();
//    void SameLine(optional float offset_from_start_x, optional float spacing);
//
//    [Value]ImVec2 GetWindowPos();
//
//    ImDrawData GetDrawData();
};

interface ImVec2 {
    void ImVec2();
    void ImVec2(float x, float y);

    attribute float x;
    attribute float y;
};

interface ImVec4 {
    void ImVec4();
    void ImVec4(float x, float y, float z, float w);

    attribute float x;
    attribute float y;
    attribute float z;
    attribute float w;
};

//interface ImVector {
//    void ImVector();
//    void clear();
//    long size();
//
//    attribute float x;
//    attribute float y;
//};

interface ImDrawCmd {
    [Value]attribute ImVec4 ClipRect;
    attribute long VtxOffset;
    attribute long IdxOffset;
    attribute long ElemCount;
    attribute any TextureId;
};

interface ImDrawVert {
    [Value]attribute ImVec2 pos;
    [Value]attribute ImVec2 uv;
    attribute long col;
};

interface ImDrawData {
    attribute long CmdListsCount;
    attribute long TotalIdxCount;
    attribute long TotalVtxCount;
    attribute ImDrawList[] CmdLists;
    [Value]attribute ImVec2 DisplayPos;
    [Value]attribute ImVec2 DisplaySize;
    [Value]attribute ImVec2 FramebufferScale;
};

interface ImDrawList {
//    [Value]attribute ImVector CmdBuffer;
//    [Value]attribute ImVector IdxBuffer;
//    [Value]attribute ImVector VtxBuffer;
};