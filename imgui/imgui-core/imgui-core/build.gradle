plugins {
    id 'java'
}

group = project.libGroup

def module_name = "core"

configurations {
    includeDep
    implementation.extendsFrom includeDep
}

dependencies {
    includeDep "com.github.xpenatan.jParser:jParser-loader:$project.jParserVersion"

    testImplementation files("./build/c++/libs/imgui-core-natives.jar")
    testImplementation "junit:junit:$project.jUnitVersion"
}

clean.doFirst {
    def srcPath = projectDir.toString() + "/src/main/"

    if(new File(srcPath).exists()) {
        project.delete(files(srcPath))
    }
}

tasks.register('platformAll', Jar) {
    archiveClassifier.set("natives-desktop")
    from zipTree(projectDir.toString() + "/build/c++/libs/imgui-core-natives.jar")
}

tasks.register('fromClasses', Jar) {
    from(sourceSets.main.output) {
    }
}

publishing {
    publications {
        imguiClasses(MavenPublication) {
            version project.jDearImguiVersion
            project.version = project.jDearImguiVersion
            artifactId module_name
            artifact fromClasses

            pom.withXml {
                def dependencies = asNode().appendNode('dependencies')
                configurations.includeDep.allDependencies.each {
                    def dependencyNode = dependencies.appendNode('dependency')
                    dependencyNode.appendNode('groupId', it.group)
                    dependencyNode.appendNode('artifactId', it.name)
                    dependencyNode.appendNode('version', it.version)
                }
            }
        }
        imguiNatives(MavenPublication) {
            version project.jDearImguiVersion
            project.version = project.jDearImguiVersion
            artifactId module_name + "-platform"
            artifact platformAll
        }
    }
}
