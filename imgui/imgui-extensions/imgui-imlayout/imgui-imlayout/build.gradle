plugins {
    id 'java'
}

group = project.libGroup

def module_name = "ImLayout"

dependencies {
    implementation project(":imgui:imgui-core:imgui-core")
    implementation "com.github.xpenatan.jParser:jParser-loader:$project.jParserVersion"

    // Use JUnit test framework
    testImplementation "junit:junit:$project.jUnitVersion"
}

clean.doFirst {
    def jniPath = projectDir.toString() + "/jni/"
    def libPath = projectDir.toString() + "/libs/"
    def srcPath = projectDir.toString() + "/src/main/"

    if(new File(jniPath).exists()) {
        project.delete(files(jniPath))
    }
    if(new File(libPath).exists()) {
        project.delete(files(libPath))
    }
    if(new File(srcPath).exists()) {
        project.delete(files(srcPath))
    }
}

task fromClasses(type: Jar) {
    from(sourceSets.main.output) {
        exclude "com/github/xpenatan/imgui/generate/**"
    }
}

task platformAll(type: Jar) {
    archiveClassifier.set("natives-desktop")
    from zipTree(projectDir.toString() + "/libs/imlayout-natives.jar")
}

publishing {
    publications {
        imguiClasses(MavenPublication) {
            version project.ImLayoutVersion
            project.version = project.ImLayoutVersion
            artifactId module_name
            artifact fromClasses
        }
        imguiNatives(MavenPublication) {
            version project.ImLayoutVersion
            project.version = project.ImLayoutVersion
            artifactId module_name + "-platform"
            artifact platformAll
        }
    }
}