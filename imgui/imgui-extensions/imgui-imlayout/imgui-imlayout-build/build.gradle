plugins {
    id 'java'
}

project.ext.mainClassName = "com.github.xpenatan.imgui.imlayout.generate.BuildImLayout"

dependencies {
    implementation project(":imgui:imgui-core:imgui-core")
    implementation project(":imgui:imgui-core:imgui-core-build")
    implementation project(":imgui:imgui-extensions:imgui-imlayout:imgui-imlayout-base")
    implementation "com.github.xpenatan.jParser:jParser-core:$project.jParserVersion"
    implementation "com.github.xpenatan.jParser:jParser-cpp:$project.jParserVersion"
    implementation "com.github.xpenatan.jParser:jParser-teavm:$project.jParserVersion"

    implementation "com.badlogicgames.gdx:gdx-jnigen:$project.jniGenVersion"
    implementation "com.github.xpenatan.jParser:jParser-loader:$project.jParserVersion"
}

task buildNative(dependsOn: classes, type: JavaExec) {
    setDescription("Generate native project")
    mainClass.set(project.mainClassName)
    setClasspath(sourceSets.main.runtimeClasspath)
}

task buildCpp(dependsOn: ":imgui:imgui-cpp:imgui-cpp:generateNatives") {
}

task buildCore(dependsOn: ":imgui:imgui-core:imgui-core:generateNatives") {
}

task generateNatives() {
    setDescription("Generate native project")
    dependsOn buildCpp, buildNative
}

buildCore.shouldRunAfter buildCpp

buildNative.shouldRunAfter buildCore