plugins {
    id 'java'
    id 'de.undercouch.download' version '4.0.2'
}

group = project.libGroup

def module_name = "ext-layout"

dependencies {
    implementation "com.badlogicgames.gdx:gdx-jnigen:$project.jniGenVersion"
    implementation "com.badlogicgames.gdx:gdx-jnigen-loader:$project.jniGenVersion"

    implementation project(":imgui:imgui-core:imgui-core")
    implementation project(":imgui:imgui-cpp:imgui-cpp")

    // Use JUnit test framework
    testImplementation "junit:junit:$project.jUnitVersion"
}

project.ext.mainClassName = "com.github.xpenatan.imgui.generate.BuildExt"

clean.doFirst {
    def jniPath = projectDir.toString() + "/jni/"
    def libPath = projectDir.toString() + "/libs/"
    if(new File(jniPath).exists()) {
        project.delete(files(jniPath))
    }
    if(new File(libPath).exists()) {
        project.delete(files(libPath))
    }
}

task copyNatives() {
    doLast {
        copy {
            from "../../imgui-cpp/libs"
            into "./libs/"
        }
    }
}

task generateNatives(dependsOn: [copyNatives, classes], type: JavaExec) {
    description = 'Build jDear ImGui Layout'

    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
}

task fromClasses(type: Jar) {
    from(sourceSets.main.output) {
        exclude "com/github/xpenatan/imgui/generate/**"
    }
}

task platformAll(type: Jar) {
    archiveClassifier = "natives-desktop"
    from zipTree(projectDir.toString() + "/libs/imgui-ext-natives.jar")
}

publishing {
    publications {
        imguiClasses(MavenPublication) {
            version project.jDearImguiVersion
            project.version = project.jDearImguiVersion
            artifactId module_name
            artifact fromClasses
        }
        imguiNatives(MavenPublication) {
            version project.jDearImguiVersion
            project.version = project.jDearImguiVersion
            artifactId module_name + "-platform"
            artifact platformAll
        }
    }
}