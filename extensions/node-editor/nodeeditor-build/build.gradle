plugins {
    id 'de.undercouch.download' version '5.4.0'
}

project.ext.mainClassName = "com.github.xpenatan.imgui.extension.nodeeditor.generate.Build"


dependencies {
    implementation project(":imgui:core")
    implementation project(":imgui:generator")
    implementation project(":extensions:node-editor:editor-base")

    implementation "com.github.xpenatan.jParser:jParser-core:$project.jParserVersion"
    implementation "com.github.xpenatan.jParser:jParser-cpp:$project.jParserVersion"
    implementation "com.github.xpenatan.jParser:jParser-teavm:$project.jParserVersion"

    implementation "com.github.xpenatan.jParser:jParser-loader:$project.jParserVersion"
}

tasks.register('downloadZipFile', Download) {
//    src 'https://github.com/thedmd/imgui-node-editor/archive/refs/heads/master.zip'
    src 'https://github.com/xpenatan/imgui-node-editor/archive/refs/heads/develop2.zip'
    dest new File(layout.getBuildDirectory().get().asFile, '1.0.zip')
}

tasks.register('downloadAndUnzipFile', Copy) {
    dependsOn downloadZipFile
    from zipTree(downloadZipFile.dest)

    eachFile { fcd ->
        def paths = fcd.relativePath.segments.drop(1)
        fcd.relativePath = new RelativePath(true, paths)  // (2)
        def fullString = paths.toString()
        if (paths.length > 1 || !(fullString.contains(".h") || fullString.contains(".cpp") || fullString.contains(".inl")))
            fcd.exclude()
    }

    includeEmptyDirs = false

    into {
        projectDir.toString() + "/build/c++/src/"
    }
}

tasks.register('buildNative', JavaExec) {
    dependsOn([downloadAndUnzipFile, classes])
//    dependsOn([classes])
    setDescription("Generate native project")
    mainClass.set(project.mainClassName)
    setClasspath(sourceSets.main.runtimeClasspath)
}

tasks.register('buildCpp') {
    dependsOn ":imgui:cpp:generateNatives"
}

tasks.register('buildCore') {
    dependsOn ":imgui:core:core:generateNatives"
}

tasks.register('generateNatives') {
    setDescription("Generate native project")
    dependsOn buildCpp, buildNative
}